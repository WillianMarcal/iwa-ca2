{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/AddProductScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","item","existItem","find","x","map","filter","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","name","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","dispatch","useDispatch","useSelector","useEffect","a","axios","get","data","console","log","response","message","key","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","params","deleteProductHandler","fetch","method","then","deleteProduct","alert","push","Image","alt","fluid","ListGroup","Item","description","countInStock","Form","Control","onChange","e","target","Array","keys","Button","onClick","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","AddProductScreen","setName","setPrice","setImage","brand","setBrand","category","setCategory","setCountInStock","setDescription","uploading","onSubmit","preventDefault","Math","floor","random","headers","body","Group","controlId","Label","placeholder","required","App","path","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.556e8d30.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  ADD_PRODUCT_REQUEST,\n  ADD_PRODUCT_SUCCESS,\n  ADD_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      \n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const addProductReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case ADD_PRODUCT_REQUEST:\n      return { loading: true, ...state }\n    case ADD_PRODUCT_SUCCESS:\n      return { loading: false, product: action.payload }\n    case ADD_PRODUCT_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const deleteProductReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case DELETE_PRODUCT_REQUEST:\n      return { loading: true, ...state }\n    case DELETE_PRODUCT_SUCCESS:\n      return { loading: false, product: null }\n    case DELETE_PRODUCT_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\n\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\nexport const ADD_PRODUCT_FAIL = 'ADD_PRODUCT_FAIL'\n\n\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'","import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n","import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container } from 'react-bootstrap'\n\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>E-Shop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/add-product'>\n                <Nav.Link>\n                  <i className='fas fa-user'></i> Add Product\n                </Nav.Link>\n              </LinkContainer>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; E-Shop</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport './Product.css'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded product'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product.id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products } = productList\n\n  useEffect(() => {\n    dispatch(listProducts())\n  }, [dispatch])\n\n  return (\n    <div >\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </div>\n  )\n}\n\nexport default HomeScreen\n","import axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  ADD_PRODUCT_REQUEST,\n  ADD_PRODUCT_SUCCESS,\n  ADD_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAIL,\n} from '../constants/productConstants'\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const {data} = await axios.get('http://localhost:5000/api/products')\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n    console.log(data)\n\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`http://localhost:5000/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\nexport const addProduct = (product) => async (dispatch) => {\n  try {\n    dispatch({ type: ADD_PRODUCT_REQUEST })\n    fetch('http://localhost:5000/api/products', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(product)\n    }).then(() => {\n      console.log('new product added');\n    })\n\n    dispatch({\n      type: ADD_PRODUCT_SUCCESS,\n      payload: product,\n    })\n  } catch (error) {\n    dispatch({\n      type: ADD_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\n\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n    fetch(`http://localhost:5000/api/products/${id}`,  {\n      method: 'DELETE'\n    }).then(() => {\n     \n    }) \n\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: id,\n    })\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails, deleteProduct } from '../actions/productActions'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const deleteProductHandler=(id)=>{\n    dispatch(deleteProduct(id))\n    alert('Product Deleted')\n    history.push('/')\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>${product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <Form.Control\n                          as='select'\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className='btn-block'\n                    type='button'\n                    disabled={product.countInStock === 0}\n                  >\n                    Add To Cart\n                  </Button>\n\n                  <Button\n                    onClick={()=>deleteProductHandler(match.params.id)}\n                    className='btn-block'\n                    type='button'\n                    disabled={product.countInStock === 0}\n                  >\n                    Delete\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data.id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { addProduct } from '../actions/productActions'\r\n\r\nfunction AddProductScreen({history}) {\r\nconst [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(\r\n        addProduct({\r\n        _id: Math.floor(Math.random() * 2000),\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })  \r\n    )\r\n\r\n   setName('')\r\n   setPrice('')\r\n   setImage('')\r\n   setBrand('')\r\n   setCategory('')\r\n   setDescription('')\r\n   setCountInStock('')\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Add Product</h1>\r\n       \r\n        {  \r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                required={true}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              \r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                required={true}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        }\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddProductScreen","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport AddProductScreen from './screens/AddProductScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/add-product' component={AddProductScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}